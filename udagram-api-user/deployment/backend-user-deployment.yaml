apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-user
  labels:
    service: backend-user
spec:
  replicas: 1
  selector:
    matchLabels:
      service: backend-user
  template:
    metadata:
      labels:
        service: backend-user
    spec:
      containers:
        - image: ahmedsamir89get/udagram-api-user
          name: udagram-api-user
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 3
          imagePullPolicy: Always
          env:
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: env-secret
                  key: POSTGRES_USERNAME
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: env-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: POSTGRES_DB
            - name: POSTGRES_HOST
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: POSTGRES_HOST
            - name: AWS_REGION
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: AWS_REGION
            - name: AWS_BUCKET
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: AWS_BUCKET
            - name: AWS_PROFILE
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: AWS_PROFILE
            - name: JWT_SECRET
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: JWT_SECRET
            - name: URL
              valueFrom:
                configMapKeyRef:
                  name: env-configmap
                  key: URL
      restartPolicy: Always